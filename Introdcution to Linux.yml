Why Should You Learn about Linux?:
----------------------------------|

Linux is a critical technology for IT professionals to understand.

Linux is in widespread use, and if you use the internet at all, you are probably already interacting with Linux systems in your 
daily life. Perhaps the most obvious way in which you interact with Linux systems is through browsing the World Wide Web and 
using e-commerce sites to buy and sell products.

However, Linux is in use for much more than that. Linux manages point-of-sale systems and the world's stock markets, and also 
powers smart TVs and in-flight entertainment systems. It powers most of the top 500 supercomputers in the world. Linux
provides the foundational technologies powering the cloud revolution and the tools used to build the next generation of 
container-based micro services applications, software-based storage technologies, and big data solutions.

In the modern data center, Linux and Microsoft Windows are the major players, and Linux is a growing segment in that space.
Some of the many reasons to learn Linux include:

  A Windows user needs to interoperate with Linux.
  
  In application development, Linux hosts the application or its runtime.
  
  In cloud computing, the cloud instances in the private or public cloud environment use Linux as the operating system.
  
  With mobile applications or the Internet of Things (IoT), the chances are high that the operating system of your device uses
  Linux.
  
  If you are looking for new opportunities in IT, Linux skills are in high demand. 
  
==============================================================================================================================
What Makes Linux Great?:
==============================================================================================================================


There are many different answers to the question "What makes Linux great?", however, three of them are:

 Linux is open source software.
 
 Being open source does not just mean that you can see how the system works. You can also experiment with changes and share
 them freely for others to use. The open source model means that improvements are easier to make, enabling faster innovation.
 
 Linux provides easy access to a powerful and scriptable command-line interface (CLI) .
 
 Linux was built around the basic design philosophy that users can perform all administration tasks from the CLI. 
 
 It enables easier automation, deployment, and provisioning, and simplifies both local and remote system administration.
 
 Unlike other operating systems, these capabilities have been built in from the beginning, and the assumption has always been
 to enable these important capabilities.
 
 Linux is a modular operating system that allows you to easily replace or remove components.
 
 Components of the system can be upgraded and updated as needed. A Linux system can be a general-purpose development
 workstation or an extremely stripped-down software appliance. 
 
 
 ==============================================================================================================================
 What is Open Source Software?:
==============================================================================================================================

Open source software is software with source code that anyone can use, study, modify, and share.

Source code is the set of human-readable instructions that are used to make a program. It may be interpreted as a script or 
compiled into a binary executable which the computer runs directly. Upon creating source code, it gets copyrighted, and the 
copyright holder controls the terms under which the software can be copied, adapted, and distributed. Users can use this 
software under a software license.

Some software has source code that only the person, team, or organization that created it can see, or change, or distribute.
This software is sometimes called "proprietary" or "closed source" software. Typically the license only allows the end user 
to run the program, and provides no access, or tightly limited access, to the source.

Open source software is different. When the copyright holder provides software under an open source license, they grant the
user the right to run the program and also to view, modify, compile, and redistribute the source royalty-free to others.

Open source promotes collaboration, sharing, transparency, and rapid innovation because it encourages people beyond the
original developers to make modifications and improvements to the software and to share it with others.

Just because the software is open source does not mean it is somehow not able to be used or provided commercially. 
Open source is a critical part of many organizations' commercial operations. Some open source licenses allow code 
to be reused in closed source products. One can sell open source code, but the terms of true open source licenses 
generally allow the customer to redistribute the source code. Most commonly, vendors such as Red Hat provide commercial 
help with deploying, supporting, and extending solutions based on open source products.

Open source has many benefits for the user:

    Control : See what the code does and change it to improve it.

    Training : Learn from real-world code and develop more useful applications.

    Security : Inspect sensitive code, fix with or without the original developers' help.

    Stability : Code can survive the loss of the original developer or distributor. 

The bottom line is that open source allows the creation of better software with a higher return on investment by collaboration. 

==============================================================================================================================
Linux Kernel:
==============================================================================================================================
The Linux Kernel

In 1991, a Finnish student named Linus Benedict Torvalds made the kernel of a now popular operating system. He released Linux
version 0.01 on September 1991, and on February 1992, he licensed the kernel under the GPL license. The GNU General Public 
License (GPL) allows people to use, own, modify, and distribute the source code legally and free of charge. This permits the 
kernel to become very popular because anyone may download it for free. Now that anyone can make their own kernel, it may be 
helpful to know how to obtain, edit, configure, compile, and install the Linux kernel.

A kernel is the core of an operating system. The operating system is all of the programs that manages the hardware and allows
users to run applications on a computer. The kernel controls the hardware and applications. Applications do not communicate 
with the hardware directly, instead they go to the kernel. In summary, software runs on the kernel and the kernel operates 
the hardware. Without a kernel, a computer is a useless object.


There are many reasons for a user to want to make their own kernel. Many users may want to make a kernel that only contains 
the code needed to run on their system. For instance, my kernel contains drivers for FireWire devices, but my computer lacks 
these ports. When the system boots up, time and RAM space is wasted on drivers for devices that my system does not have 
installed. If I wanted to streamline my kernel, I could make my own kernel that does not have FireWire drivers. As for 
another reason, a user may own a device with a special piece of hardware, but the kernel that came with their latest
version of Ubuntu lacks the needed driver. This user could download the latest kernel (which is a few versions ahead of 
Ubuntu’s Linux kernels) and make their own kernel that has the needed driver. However, these are two of the most common 
reasons for users wanting to make their own Linux kernels.


Before we download a kernel, we should discuss some important definitions and facts. The Linux kernel is a monolithic kernel.
This means that the whole operating system is on the RAM reserved as kernel space. To clarify, the kernel is put on the RAM.
The space used by the kernel is reserved for the kernel. Only the kernel may use the reserved kernel space. The kernel owns
that space on the RAM until the system is shutdown. In contrast to kernel space, there is user space. User space is the space
on the RAM that the user’s programs own. Applications like web browsers, video games, word processors, media players, the
wallpaper, themes, etc. are all on the user space of the RAM. When an application is closed, any program may use the newly
freed space. With kernel space, once the RAM space is taken, nothing else can have that space.

The Linux kernel is also a preemptive multitasking kernel. This means that the kernel will pause some tasks to ensure that 
every application gets a chance to use the CPU. For instance, if an application is running but is waiting for some data, 
the kernel will put that application on hold and allow another program to use the newly freed CPU resources until the
data arrives. Otherwise, the system would be wasting resources for tasks that are waiting for data or another program
to execute. The kernel will force programs to wait for the CPU or stop using the CPU. Applications cannot unpause or 
use the CPU without the kernel allowing them to do so.

==============================================================================================================================
Main components of a LINUX Based Operating System:
==============================================================================================================================
This section introduces the three components of a LINUX Based operating system and describes how these components interact with each other. The three main components of a LINUX Based system are:
    The kernel
    The shell
    The file system


The kernel:
*************

The kernel, also called the core of a Linux system, manages the physical resources of a hardware computer, devices, memory
, processes and daemons.

The kernel controls the functions between the system programs and the hardware. It also schedules and executes all commands.

The kernel manages functions such as:
**************************************
    File system and structures
    Device management, such as storing data to the disk
    Process management, such as daemons
    Memory management, such as swap space


The Shell:
**********

A shell is an interface between the user and the kernel. It acts as a command interpreter. The shell accepts commands issued
by the user, interprets these commands and then sends the executable to the kernel. The three most common shells in UNIX are.
Bourne shell, C shell and Korn shell. There are also popular open source UNIX shells such as Z shell and bash, both are 
extensions of Bourne shell.

In order to identify the shell you are using in a UNIX system, execute the following command, in the example below.
Here we see that the shell in use is bash.

kiosk@node:~$ echo $SHELL

/bin/bash

The File system:
*****************

The LINIUX file system is a hierarchy of directories, sub directories and files that are organized or grouped for
special purposes.


==============================================================================================================================
